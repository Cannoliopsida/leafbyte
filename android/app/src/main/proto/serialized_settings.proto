syntax = "proto3"; // TODO: use newest version

option java_package = "com.thebluefolderproject.leafbyte.serializedsettings";
option java_multiple_files = true;

// These data structures on disk do theoretically grow without bound, but you could use a hundred different datasets every day for a summer
// and only use ~200 KBs, so it's a truly pathological case where this matters.
message SerializedSettings {
  SaveLocation dataSaveLocation = 1;
  SaveLocation imageSaveLocation = 2;
  string datasetName = 3;
  map<string, int32> datasetNameToEpochTimeOfLastUse = 4;
  float scaleMarkLength = 5;
  map<string, string> datasetNameToUnit = 6;
  // We have a separate file for each unit for a given dataset so that the header is accurate. On Google Drive, these files can all have the same filename, but locally you need unique names. So, the first filename will be just the dataset, while subsequent filenames will have the unit suffixed. To achieve that, we need to track the unit of the first file (the one without a suffix).
  map<string, string> datasetNameToUnitInFirstLocalFile = 7;
  map<string, int32> datasetNameToNextSampleNumber = 8;
  bool useBarcode = 9;
  bool saveGpsData = 10;
  bool useBlackBackground = 11;
  bytes googleAuthState = 12;
  map<string, string> userIdToTopLevelGoogleFolderId = 13;
  map<string, UserIdToGoogleFolderId> datasetNameToUserIdToGoogleFolderId = 14;
  map<string, UnitToUserIdToGoogleSpreadsheetId> datasetNameToUnitToUserIdToGoogleSpreadsheetId = 15;
}

enum SaveLocation { // TODO make this closed
  NONE = 0;
  LOCAL = 1;
  GOOGLE_DRIVE = 2;
}

message UserIdToGoogleFolderId {
  map<string, string> userIdToGoogleFolderId = 1;
}

message UnitToUserIdToGoogleSpreadsheetId {
  map<string, UserIdToGoogleSpreadsheetId> userIdToGoogleFolderId = 1;
}

message UserIdToGoogleSpreadsheetId {
  map<string, string> userIdToGoogleFolderId = 1;
}
