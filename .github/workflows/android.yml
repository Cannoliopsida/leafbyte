name: Android

# It's tempting to add a path filter here so that this only runs on changes to the android folder. However, that only looks at the most recent commit,
# so tests are incorrectly bypassed if several commits editing iOS are pushed with the latest one not touching android. Instead, we use a filter step
# below.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and test Android
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    defaults:
      run:
        working-directory: android

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: $(( ${{ github.event_name == 'pull_request' && github.event.pull_request.commits || 0 }} + 1 ))
      - name: Get changed Android files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: android/**
      - name: Note if Android files not changed
        if: steps.changed-files.outputs.any_changed != 'true'
        run: echo "Android is not affected"
      - name: Set up Java
        uses: actions/setup-java@v4
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          java-version: 17
          distribution: "temurin"
      # - name: Set up Gradle
      #   if: steps.changed-files.outputs.any_changed != 'true'
      #   uses: gradle/gradle-build-action@v3
      # - name: Initilize the gradle wrapper
      #   run: gradle wrapper && chmod +x ./gradlew
      - name: Build and check (no instrumented checks)
        if: steps.changed-files.outputs.any_changed == 'true'
        run: ./gradlew check --continue # Continue so that we can see all failures and not just the first; this step still fails if anything fails
      - name: Run instrumented checks
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 28
          arch: x86_64
          disk-size: 6000M
          heap-size: 600M
          disable-animations: true
          script: ./android/gradlew connectedCheck

      - name: Debug
        if: success() || failure() && steps.changed-files.outputs.any_changed == 'true'
        run: ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
      - name: Upload everything
        uses: actions/upload-artifact@v4
        if: success() || failure() && steps.changed-files.outputs.any_changed == 'true'
        with:
          name: allResults
          path: android/app/build/
          retention-days: 1

      - name: Upload unit test results
        uses: actions/upload-artifact@v4
        if: success() || failure() && steps.changed-files.outputs.any_changed == 'true'
        with:
          name: unitTestResults
          path: android/app/build/test-results/**/*.xml
          retention-days: 1
      - name: Upload instrumented test results
        uses: actions/upload-artifact@v4
        if: success() || failure() && steps.changed-files.outputs.any_changed == 'true'
        with:
          name: instrumentedTestResults
          path: android/app/build/outputs/androidTest-results/connected/**/*.xml
          retention-days: 1
      # Warning: test results may appear on the wrong workflow, e.g. iOS or CodeQL https://github.com/orgs/community/discussions/24616
      - name: Publish unit test results
        uses: dorny/test-reporter@v1
        if: success() || failure() && steps.changed-files.outputs.any_changed == 'true'
        with:
          artifact: unitTestResults
          name: Android unit test results
          path: '**/*.xml'
          reporter: java-junit
      - name: Publish instrumented test results
        uses: dorny/test-reporter@v1
        if: success() || failure() && steps.changed-files.outputs.any_changed == 'true'
        with:
          artifact: instrumentedTestResults
          name: Android instrumented test results
          path: '**/*.xml'
          reporter: java-junit